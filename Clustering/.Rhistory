packageVersion("DESeq2")
c("hello", "there", "mate")
factor(("hello", "there", "mate"))
factor(c("hello", "there", "mate"))
library(DESeq2)
setwd("/Users/danielwang/documents/immunotherapy-gene-profiling")
countData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
setwd("/Users/danielwang/documents/immunotherapy-gene-profiling/clustering")
countData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
countData = subset(countData, select=-c(X))
countData
symbols <- mapIds(org.Hs.eg.db, keys=rownames(countData), column="SYMBOL", keytype="ENSEMBL", multivals="first")
library("org.Hs.eg.db")
symbols <- mapIds(org.Hs.eg.db, keys=rownames(countData), column="SYMBOL", keytype="ENSEMBL", multivals="first")
symbols
countData = cbind(countData, SYMBOL = symbols)
countData = data.frame(countData)
rownames(countData) <- ifelse(is.na(countData$SYMBOL), rownames(countData), countData$SYMBOL)
row.names(countData) <- ifelse(is.na(countData$SYMBOL), rownames(countData), countData$SYMBOL)
new_rownames <- ifelse(is.na(countData$SYMBOL), rownames(countData), countData$SYMBOL)
new_rownames
countData$rownames = new_rownames
countData
countData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
countData = subset(countData, select=-c(X))
countData$SYMBOL = symbols
cocountData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
countData = subset(countData, select=-c(X))
countData$ = cbind(countData, SYMBOL = symbols)
countData$ <- cbind(countData, SYMBOL = symbols)
countData <- cbind(countData, SYMBOL = symbols)
countData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
countData = subset(countData, select=-c(X))
countData <- cbind(countData, SYMBOL = symbols)
countData <- data.frame(countData)
new_rownames <- ifelse(is.na(countData$SYMBOL), rownames(countData), countData$SYMBOL)
countData <- cbind(new_rownames, countData)
countData
countData <- as.matrix(read.csv("one_added_log_norm_counts.csv", row.names="gene_id"))
countData = subset(countData, select=-c(X))
symbols <- mapIds(org.Hs.eg.db, keys=rownames(countData), column="SYMBOL", keytype="ENSEMBL", multivals="first")
genes <- ifelse(is.na(countData$SYMBOL), rownames(countData), symbols)
genes <- ifelse(is.na(symbols), rownames(countData), symbols)
countData <- cbind(genes, countData)
countData
symbols
countData
library("data.table")
write.table(countData, file="one_added_log_norm_counts.txt", sep = "\t", quote = FALSE, row.names = FALSE)
